import typeinfo.pets.*;
import java.util.*;
import holding.InterfaceVsIterator;

class PetSequence {
	protected Pet[] pets = Pets.createArray(8);
}

class NonCollectionSequence extends PetSequence implements Iterable<Pet> {
	public Iterator<Pet> iterator() {
		return new Iterator<Pet>() {
			private int index = 0;

			public boolean hasNext() {
				return index < pets.length;
			}

			public Pet next() {
				return pets[index++];
			}

			public void remove() { // Not implemented
				throw new UnsupportedOperationException();
			}
		};
	}

	public Iterator<Pet> reserved() {
		return new Iterator<Pet>() {
			private int i = pets.length;

			public boolean hasNext() {
				return i > 0;
			}

			public Pet next() {
				return pets[--i];
			}
		};
	}

	public Iterator<Pet> randomized() {
		List<Pet> list = new ArrayList<>();
		Collections.addAll(list, pets);
		Collections.shuffle(list, new Random(47));
		return list.iterator();
	}
}
public class Main {
	public static void main(String[] args) {
		NonCollectionSequence n = new NonCollectionSequence();
		InterfaceVsIterator.display(n.iterator());
		InterfaceVsIterator.display(n.reserved());
		InterfaceVsIterator.display(n.randomized());
	}
} /* Output:
0:Rat 1:Manx 2:Cymric 3:Mutt 4:Pug 5:Cymric 6:Pug 7:Manx 
7:Manx 6:Pug 5:Cymric 4:Pug 3:Mutt 2:Cymric 1:Manx 0:Rat 
4:Pug 3:Mutt 6:Pug 0:Rat 7:Manx 1:Manx 2:Cymric 5:Cymric 
*///:~